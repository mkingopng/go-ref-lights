# .github/workflows/ci.yml
name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 'stable'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install CDK and Python dependencies
        run: |
          npm install -g aws-cdk
          pip install poetry
          export PATH="$HOME/.local/bin:$PATH"
          cd referee_lights_cdk
          poetry install  # ✅ No need for 'poetry env use 3.10'

      - name: Install Go dependencies
        run: go mod download

      - name: Lint and Static Analysis
        run: |
          go install golang.org/x/lint/golint@latest
          golint ./...

      - name: Run Unit Tests
        run: go test -v ./...

      - name: Build Docker Image
        run: |
          docker build -t referee-lights:latest -f Dockerfile .

      - name: Synthesize CDK Stack
        run: poetry run cdk synth

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install AWS CDK and Poetry
        run: |
          npm install -g aws-cdk
          pip install poetry
          export PATH="$HOME/.local/bin:$PATH"
          cd referee_lights_cdk
          poetry install

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Clean CDK output
        run: |
          rm -rf referee_lights_cdk/cdk.out
          rm -rf referee_lights_cdk/.cdk.staging
          rm -rf referee_lights_cdk/node_modules
          rm -rf referee_lights_cdk/package-lock.json

      - name: Deploy CDK Stack
        working-directory: referee_lights_cdk
        run: poetry run cdk deploy --app "python ../app.py" --require-approval never

      - name: Notify Slack on Success
        if: success()
        uses: slackapi/slack-github-action@v1.23.0
        with:
          channel-id: ${{ secrets.SLACK_CHANNEL_ID }}  # ✅ Corrected placement
          payload: |
            {
              "text": "Deployment succeeded for the main branch!",
              "attachments": [{
                "color": "good",
                "text": "Your CDK deployment completed successfully."
              }]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
